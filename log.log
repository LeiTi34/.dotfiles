building the system configuration...
warning: Git tree '/home/alex/.dotfiles' is dirty
error:
       … while evaluating call site

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:274:28:

          273|           # For definitions that have an associated option
          274|           declaredConfig = mapAttrsRecursiveCond (v: ! isOption v) (_: v: v.value) options;
             |                            ^
          275|

       … while calling 'mapAttrsRecursiveCond'

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/attrsets.nix:590:5:

          589|     # Attribute set to recursively map over.
          590|     set:
             |     ^
          591|     let

       … while evaluating the attribute 'matchedOptions'

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:665:14:

          664|     in {
          665|       inherit matchedOptions;
             |              ^
          666|

       … while evaluating call site

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:587:21:

          586|       # an attrset 'name' => list of submodules that declare ‘name’.
          587|       declsByName = byName "options" (module: option:
             |                     ^
          588|           [{ inherit (module) _file; options = option; }]

       … while calling 'byName'

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:566:25:

          565|       */
          566|       byName = attr: f: modules:
             |                         ^
          567|         zipAttrsWith (n: concatLists)

       … while evaluating call site

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:266:33:

          265|           ({ inherit lib options config specialArgs; } // specialArgs);
          266|         in mergeModules prefix (reverseList collected);
             |                                 ^
          267|

       … while calling 'reverseList'

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/lists.nix:406:17:

          405|   */
          406|   reverseList = xs:
             |                 ^
          407|     let l = length xs; in genList (n: elemAt xs (l - n - 1)) l;

       … while evaluating call site

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:262:25:

          261|       merged =
          262|         let collected = collectModules
             |                         ^
          263|           (specialArgs.modulesPath or "")

       … while calling anonymous lambda

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:449:37:

          448|
          449|     in modulesPath: initialModules: args:
             |                                     ^
          450|       filterModules modulesPath (collectStructuredModules unknownModule "" initialModules args);

       … while evaluating call site

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:450:7:

          449|     in modulesPath: initialModules: args:
          450|       filterModules modulesPath (collectStructuredModules unknownModule "" initialModules args);
             |       ^
          451|

       … while calling 'filterModules'

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:417:36:

          416|       # modules recursively. It returns the final list of unique-by-key modules
          417|       filterModules = modulesPath: { disabled, modules }:
             |                                    ^
          418|         let

       … while evaluating call site

       at «none»:0: (source not available)

       … while calling anonymous lambda

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:443:31:

          442|           disabledKeys = concatMap ({ file, disabled }: map (moduleKey file) disabled) disabled;
          443|           keyFilter = filter (attrs: ! elem attrs.key disabledKeys);
             |                               ^
          444|         in map (attrs: attrs.module) (builtins.genericClosure {

       … while evaluating the attribute 'disabled'

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:399:13:

          398|           collectResults = modules: {
          399|             disabled = concatLists (catAttrs "disabled" modules);
             |             ^
          400|             inherit modules;

       … while evaluating call site

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:404:22:

          403|           let
          404|             module = loadModule args parentFile "${parentKey}:anon-${toString n}" x;
             |                      ^
          405|             collectedImports = collectStructuredModules module._file module.key module.imports args;

       … while calling 'loadModule'

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:363:53:

          362|       # Like unifyModuleSyntax, but also imports paths and calls functions if necessary
          363|       loadModule = args: fallbackFile: fallbackKey: m:
             |                                                     ^
          364|         if isFunction m || isAttrs m then

       … while evaluating call site

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:369:14:

          368|           throw "Module imports can't be nested lists. Perhaps you meant to remove one level of lists? Definitions: ${showDefs defs}"
          369|         else unifyModuleSyntax (toString m) (toString m) (applyModuleArgsIfFunction (toString m) (import m) args);
             |              ^
          370|

       … while calling 'unifyModuleSyntax'

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:458:34:

          457|      of ‘options’, ‘config’ and ‘imports’ attributes. */
          458|   unifyModuleSyntax = file: key: m:
             |                                  ^
          459|     let

       … while evaluating call site

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:369:59:

          368|           throw "Module imports can't be nested lists. Perhaps you meant to remove one level of lists? Definitions: ${showDefs defs}"
          369|         else unifyModuleSyntax (toString m) (toString m) (applyModuleArgsIfFunction (toString m) (import m) args);
             |                                                           ^
          370|

       … while calling 'applyModuleArgsIfFunction'

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:490:39:

          489|
          490|   applyModuleArgsIfFunction = key: f: args@{ config, options, lib, ... }: if isFunction f then
             |                                       ^
          491|     let

       … while evaluating call site

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:490:78:

          489|
          490|   applyModuleArgsIfFunction = key: f: args@{ config, options, lib, ... }: if isFunction f then
             |                                                                              ^
          491|     let

       … while calling 'isFunction'

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/trivial.nix:448:16:

          447|   */
          448|   isFunction = f: builtins.isFunction f ||
             |                ^
          449|     (f ? __functor && isFunction (f.__functor f));

       … while realising the context of path '/nix/store/k7xz2kzkksy7jf1cl89y62rbm5l93myg-source/system/vm/configuration.nix'

       at /nix/store/smqnlsl2d5b0ig64dp61hf0hjn5f91bg-source/lib/modules.nix:369:99:

          368|           throw "Module imports can't be nested lists. Perhaps you meant to remove one level of lists? Definitions: ${showDefs defs}"
          369|         else unifyModuleSyntax (toString m) (toString m) (applyModuleArgsIfFunction (toString m) (import m) args);
             |                                                                                                   ^
          370|

       error: getting status of '/nix/store/k7xz2kzkksy7jf1cl89y62rbm5l93myg-source/system': No such file or directory
